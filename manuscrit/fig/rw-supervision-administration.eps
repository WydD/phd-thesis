%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 302 575 489
%%Creator: yExport 1.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, April 25, 2012 6:35:01 PM CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
793 267 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
793.000 0.00000 l
793.000 267.000 l
0.00000 267.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 793 267 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -285.000 -315.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
285.000 315.000 m
1078.00 315.000 l
1078.00 582.000 l
285.000 582.000 l
285.000 315.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -285.000 -315.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -285.000 -315.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -285.000 -315.000 ] defaultmatrix matrix concatmatrix setmatrix
.960784 .960784 .960784 RG
newpath
810.000 334.777 m
810.000 536.000 l
810.000 538.209 811.791 540.000 814.000 540.000  c
1059.00 540.000 l
1061.21 540.000 1063.00 538.209 1063.00 536.000  c
1063.00 334.777 l
1063.00 332.568 1061.21 330.777 1059.00 330.777  c
814.000 330.777 l
811.791 330.777 810.000 332.568 810.000 334.777  c
h
f
.921569 .921569 .921569 RG
newpath
810.000 330.777 m
1063.00 330.777 l
1063.00 355.730 l
810.000 355.730 l
810.000 330.777 l
h
f
.960784 .960784 .960784 RG
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 -1.00000 887.205 349.485 ] concat
0.00000 0.00000 moveto
/Helvetica findfont 18 scalefont setfont 15.0000 cfontH
(\000G\000e\000s\000t\000i\000o\000n\000n\000a\000i\000r\000e\000 \000A\000g\000e\000n\000t) recshow
Q
2 J
10.0000 M
.960784 .960784 .960784 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
810.000 334.777 m
810.000 536.000 l
810.000 538.209 811.791 540.000 814.000 540.000  c
1059.00 540.000 l
1061.21 540.000 1063.00 538.209 1063.00 536.000  c
1063.00 334.777 l
1063.00 332.568 1061.21 330.777 1059.00 330.777  c
814.000 330.777 l
811.791 330.777 810.000 332.568 810.000 334.777  c
h
S
2 J
10.0000 M
q
1.00000 .600000 0.00000 RG
newpath
860.000 399.000 m
1048.00 399.000 l
1048.00 405.000 l
1048.00 411.667 1044.67 415.000 1038.00 415.000  c
870.000 415.000 l
863.333 415.000 860.000 411.667 860.000 405.000  c
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [860.0 384.0 860.0 416.5]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.9019608 0.7490196]
         /C1 [1.0 0.6784314 0.2]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
860.000 395.000 m
860.000 388.333 863.333 385.000 870.000 385.000  c
1038.00 385.000 l
1044.67 385.000 1048.00 388.333 1048.00 395.000  c
1048.00 400.000 l
860.000 400.000 l
h
f
1.00000 .941176 .850980 RG
2.00000 w
newpath
862.000 395.000 m
862.000 389.667 864.667 387.000 870.000 387.000  c
1038.00 387.000 l
1043.33 387.000 1046.00 389.667 1046.00 395.000  c
1046.00 405.000 l
1046.00 410.333 1043.33 413.000 1038.00 413.000  c
870.000 413.000 l
864.667 413.000 862.000 410.333 862.000 405.000  c
h
S
1.00000 .600000 0.00000 RG
1.00000 w
newpath
862.000 395.000 m
862.000 389.667 864.667 387.000 870.000 387.000  c
1038.00 387.000 l
1043.33 387.000 1046.00 389.667 1046.00 395.000  c
1046.00 405.000 l
1046.00 410.333 1043.33 413.000 1038.00 413.000  c
870.000 413.000 l
864.667 413.000 862.000 410.333 862.000 405.000  c
h
S
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 -1.00000 902.980 405.539 ] concat
0.00000 0.00000 moveto
/Helvetica findfont 16 scalefont setfont 13.3333 cfontH
(\000G\000e\000s\000t\000i\000o\000n\000n\000a\000i\000r\000e) recshow
Q
2 J
10.0000 M
Q
q
1.00000 .600000 0.00000 RG
newpath
860.000 449.000 m
1048.00 449.000 l
1048.00 455.000 l
1048.00 461.667 1044.67 465.000 1038.00 465.000  c
870.000 465.000 l
863.333 465.000 860.000 461.667 860.000 455.000  c
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [860.0 434.0 860.0 466.5]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.9019608 0.7490196]
         /C1 [1.0 0.6784314 0.2]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
860.000 445.000 m
860.000 438.333 863.333 435.000 870.000 435.000  c
1038.00 435.000 l
1044.67 435.000 1048.00 438.333 1048.00 445.000  c
1048.00 450.000 l
860.000 450.000 l
h
f
1.00000 .941176 .850980 RG
2.00000 w
newpath
862.000 445.000 m
862.000 439.667 864.667 437.000 870.000 437.000  c
1038.00 437.000 l
1043.33 437.000 1046.00 439.667 1046.00 445.000  c
1046.00 455.000 l
1046.00 460.333 1043.33 463.000 1038.00 463.000  c
870.000 463.000 l
864.667 463.000 862.000 460.333 862.000 455.000  c
h
S
1.00000 .600000 0.00000 RG
1.00000 w
newpath
862.000 445.000 m
862.000 439.667 864.667 437.000 870.000 437.000  c
1038.00 437.000 l
1043.33 437.000 1046.00 439.667 1046.00 445.000  c
1046.00 455.000 l
1046.00 460.333 1043.33 463.000 1038.00 463.000  c
870.000 463.000 l
864.667 463.000 862.000 460.333 862.000 455.000  c
h
S
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 -1.00000 930.320 455.539 ] concat
0.00000 0.00000 moveto
/Helvetica findfont 16 scalefont setfont 13.3333 cfontH
(\000A\000g\000e\000n\000t) recshow
Q
2 J
10.0000 M
Q
q
1.00000 .600000 0.00000 RG
newpath
860.000 499.000 m
1048.00 499.000 l
1048.00 505.000 l
1048.00 511.667 1044.67 515.000 1038.00 515.000  c
870.000 515.000 l
863.333 515.000 860.000 511.667 860.000 505.000  c
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [860.0 484.0 860.0 516.5]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.9019608 0.7490196]
         /C1 [1.0 0.6784314 0.2]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
860.000 495.000 m
860.000 488.333 863.333 485.000 870.000 485.000  c
1038.00 485.000 l
1044.67 485.000 1048.00 488.333 1048.00 495.000  c
1048.00 500.000 l
860.000 500.000 l
h
f
1.00000 .941176 .850980 RG
2.00000 w
newpath
862.000 495.000 m
862.000 489.667 864.667 487.000 870.000 487.000  c
1038.00 487.000 l
1043.33 487.000 1046.00 489.667 1046.00 495.000  c
1046.00 505.000 l
1046.00 510.333 1043.33 513.000 1038.00 513.000  c
870.000 513.000 l
864.667 513.000 862.000 510.333 862.000 505.000  c
h
S
1.00000 .600000 0.00000 RG
1.00000 w
newpath
862.000 495.000 m
862.000 489.667 864.667 487.000 870.000 487.000  c
1038.00 487.000 l
1043.33 487.000 1046.00 489.667 1046.00 495.000  c
1046.00 505.000 l
1046.00 510.333 1043.33 513.000 1038.00 513.000  c
870.000 513.000 l
864.667 513.000 862.000 510.333 862.000 505.000  c
h
S
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 -1.00000 919.246 505.539 ] concat
0.00000 0.00000 moveto
/Helvetica findfont 16 scalefont setfont 13.3333 cfontH
(\000S\000y\000s\000t\000\350\000m\000e) recshow
Q
2 J
10.0000 M
Q
q
[ 40.0000 0.00000 0.00000 47.0000 834.236 426.556 ] concat
<<
/ImageType 1
/Width 40  /Height 47
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [40 0 0 47 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
GauJ"M-!k^*XD1aCsJGj-Cm&c:7@bJ1=N%iACBPG9p=g5CuT!)VFG&igip^hMP(6bTVA*hJ>fQT5'Gdm
8!YMF+S^2*0%)_&9FNb"hYE^dn:Bc?IGB1aquG[J7q@[fi.St6k1THqqKTb1f!;RP656R6K^NjYG@u<\
EBL]Xh)EBF?aC^u*+p_@=iPSJj1AMs]i=7iPU7Z]7VomdOWiU)r:ei=OIKR.D;K20maXoB2&l(#ENE%P
rGcDHHjP;8(ja76QHf_q]/RaV01YA1C"=r9QHOpC^CM/7p)20Mkg+D;r^tSpUmkPRSLS8'[@d7:&WMB>
F/E5;ZtuS.'WHC]Z<6PJ:<fEce7Vsorm[`+hl3KhJ\AVs[O@dkTM,0O];HS^n(#PFH1maiNIcQ=s3JC)
182N0JqJLS(bu0(M<rai[dI3rUl8g\U0h!=0Q:mnS4bYj&ITF1B1@jW^"QH!ZoIK?<9(_@XO$^&>(PuO
a*qgR"Pl]beSR@q+q?:Y,]jo)^p8M_'[0s8lMr_SAe$+6/Lcu/8^kV)Q-g(UUe-MH/I.mT!`'U1AUNCq
H1+,'VeX%P^$)S*p9b2)]pjR]AS=bkO)&qdON<4bmumr[KYD38'=t%#er!W-8'Q)<SuS!kRo$qB1QfTq
QJl4SGKpL1>[YYU<kUcZ"7(CY#ln*>-pp67"r\KFE1l(hL'TJ&Z=ir7Mj%A]N6K&OmRaTi8Y.e'AVfL(
QdS.6A@k=h\OJBIldl'<B(OCJ9=t$_7K:\Bo@%tdcXq+tM(N/8%5/mrB4M$@&Hn!<>?i1DC-rk]OAP`$
)t&pj9hq1$.ItQDV;Rm^0Dn5@NS6#pRU5</2INVRGLZu3FY!G<;4qbhga1e@<C@'k]0i"i9p]B-;tK5P
JqI<IP)E(UhFY"i@*f1jojjDLm*K9H<VtI;.8ABpmoBc?AP:ter'3I6_eI-tmKeso1Srb?@`"G!KOlNX
&O=_[_>TCRk3m=e&e;>umT60lJm=&,3:<&?9@\VAIs8b91q.kXS\LZMAdnpU2[4EFh>81)5q^tuR/:<e
/<M.U7a\m+W&X'kbJFU,iDRhIKj3ag*GP`nKuj_k;Y<ZG6C6uTjt0.(K5/-:YWlLgjmR4dd"@kLIa*%@
lo2_%J73P:87+PlRE(-$>\KBl+3uo!G,tVp+M72Bs2-Zs`HT!tp,0#W];6*1TAWUA=gp]*#L`fZ,r<7S
UZgl.k)\9I^TWoOeu^E5Rib=-F1Ld3Rf`R\f-RCCE&8@J`cTs)\7O4B+`pf3fcO!lDU\:9%NcAo\MIhI
@DXddYd3pbbC"NXoP(oMcB__+Bp)ife(eN'b,9+L!a"-Fs"G7^qdA3Bb9K!MY#112>ENWaJ;YV<8%DlT
gTi:3e7#!ZK<7C.l:oI8Bb;-,eJ]2>*u')RFR6+hP06s*i_:N@"mC,c]W`GsYh-%QlZ>eUb4_3?QY0*N
4IL!g]Q0-e'JMt+,mnHC@#k>1(LXkjEH$Y6Nona#CJX.b$>f6(,W;=2bP;'af'i9/q_r?3^S]fZU*,t-
<)mbOR,m"#6J&s(6bn7g6DQ6(/HdF137rg['d/jujJX@\TI53]^2`AfX9A*acVl5`2o"[-Fm)jX(#ZC!
7<?ZIg\JH8'>(ZkE?F`K"h=_+ESUFr?^IPgQYOar]g^DBi-moVCYQf!G@@hAO*g/G7-!/&6bVgh[s>Xe
GMEOpNjlM?GGq.Y>*B*Q:aRgfBMUS.cZWu^].\irr*=Q0U4']_d;rU)pD`4uCKSpg7Ga[6Pa9S8*Ms!H
LMm0QrB_THQ#=8mmX2GW/BE7=calrcch61+45g0JX)b4@qGEIS%`<7HD1T6:[T,%-%hG(Wc6J\a%+pP3
G04G<<sNgh1s4_Z3*e39AloSM!<10Z8_^!hqi>gD8tN'j(*Ah]p=`<PNZY.'7iW4t`T8/c@6hJ,-iL\Z
F,slbT=.hH@>B9RD&NK=oCZPPQp/X!rh<31jT<Jk*`b`,V*Th[3%X`$K^PEhGLIa:a*UhaKAp=1X"MP`
HZ7Hg/bX:CIJqU0Ql82X$S[WLYh&<J&shYC3kE\5HS4fm%10b$i&cG9Vhk:icNQ-E%AZ"Id>*OQH,S5!
0Jtgq)/^2bDmHUVY2@Z1:T"=;LMt)%>'''UTo=8PZpmT5oK\?9/=%#VESujicd"M_P'qm!cR=5+75P1[
XY*cCfBjMr5!Rs/aol.1,2[YLT,KSa)r>GH3cs+fZ2@o&Je$mK;;?ncBL-O.VE"!>CPB;UIB"^`e()NI
+mpbAC6Z`qh5se=oPDJSEk@Tn'APGQI\p8>O4u!Cl21'l(Z(cC\IEp#!8t`gRKUpZIJT/`qTZn4@;YSG
3-s)fc9Q.\>RF!fkYHm]K%,,+$q6gii$k(9*-ZlF`sQrnV6S0C]QFm#Bd3t/@dht<PK/_P3b&\ujR2(Y
R[CQ0-B/<YP2oeF4>]32gRk``\6*>Q,C*$d@+c!B?;fu1-%8bO,F*_p(a>JI!`-NBq@?`pGRa~>
Q
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 -1.00000 839.250 458.211 ] concat
0.00000 0.00000 moveto
/Helvetica findfont 16 scalefont setfont 13.3333 cfontH
(\000M\000I\000B) recshow
Q
2 J
10.0000 M
q
[ 66.0000 0.00000 0.00000 67.0000 617.301 491.599 ] concat
<<
/ImageType 1
/Width 66  /Height 67
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [66 0 0 67 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb!$IgJ8dA*QS$noV#1?qU@a&IHXncWiEM-dT4&_\s4bI2Jk@s-CalA5tD(c";1e&L.qp[ODo>O0#7hu
S!sk,!n\=uFoZ$AMZI<t$jI--44CAralL[6Yq[(dIl\)oN6hDc^\\nd0`*)agPg3A1!_TA;bZ3S;_cKe
Cs8)/VSF0Rpd$sZa@7'?,h"WqN;/dJc$ap-I`TqAdl/4B]@c[LiQ0W/d/];Qojd8Oj_%PQ&(ZbQ<=Lat
1BDD8VB?rLgut$$(*ZR>I2J*TYf8L[G,H2*!NX-Wkso]jFe78I(r'H_3'DZe4<J!<]9qO\Ao<T2&Mkl=
:G+BXSj4=t0RV%$k5?%p##dGrnqhC6^j:q)]A"!2Z24SKX"]3<:bHPlqhBXtq(.3TOPS;c(fWM?-^8CM
-^jY0BHI7rM+/(^j&q4^F&JY\,$)'U,J'TM6%fUXn=Y7!cIn!9+qEd:R@0>U6G2:/*E*`_M2#o-I?1cD
j]#n2lkUr4<]?G'-,qb\aDp<d5Ta_aWB8pe,Q_$a4(&;eob?GuDCBD;8CAXp7JFVUa&5/c;9_J1V?s-G
.pgA#)i?*V\\RmTF@JJ-=q;EWr0GH1-r2FFK4S&A"dU\QFIBtUL_-4/.]3hD.)'gnkMEiMP[@f-Tcij'
W(*S6DF`rZ&b2XC$[?@[pjlmk;bW7-1!Tn;m-r0._ae[Pk_#fR_=/,PA>/csd>6&$\aXc#UaFG.c\7iV
'+nHB53([2'`C!^QT+,(@G7UfgYiW46-Vq;C&EQG71g5DJ\pE)\:)9Wj,3pk$b&GM'g<>FO&QOb%TP"+
UFB`<6qWPG_WP[iJLPRL!nUQ:7D]Jp@Z;HcBGOQga).Q&JkSm/<0X-R#narfjnOZHDA33j,*U^r;ZpZB
QsI3:PseS#QsY2Q[+^WOH*]tD>uT;6EekGG<fhk,#dV7RbddT>g39JjLKoB.CJ?EaD1,9XS-9Ko!`_A!
:5PD]GR.&Bn8Onpg!+;LbAt-u,*B7r9gX9$-h%]q##AXHUD>2Q;'4g7lOITXom08RF`h"s*g^YAT]1&b
\RUK;+@I5MRODh%M-/ac9I?20`^^CM.ShVr,.3,R1%t2eYhB8#<R22&*;MV2(f1,;LE5ptp_g4@:P%8o
R&KsN/W>pY;_/]Q!m;mo-^D?7:^*-fKT%MRnkM`\*DHCPp#d*J1Kd[G.CB$(!0^="M@D&"4"?c!EnrXm
UX2`^'TOL0Y^q_1r9ktRh"+PtfDr5I^8Q&d$@][_g(6<?E3aNU;[,`);G]NT4l,]l$7)8uO:Y]l6NRlj
a>3\m=NXKSq;[ls?`^4$J)^l@KJeE!3O/1&6sr>`r]l$:)OTQaKJ@:,C^5XZ;*l]Cf%M)I4@hY8j5fS-
]9,eg@hf+o)Nk.6:'r=)E^TbiUd1kTqF'o6!jUS-pBYPONWQ"e6Urh,Sg=mW+;2uYe7k?iFeCWa!U#Wg
TFO@<#ZN8`;=-@NgsF.R.S?a&ri$[1X5LbS,H3EA:kJeI3=;P/,h+)[)<+j#;++;)lH&-dp7Zdh\f:Ir
%`O;>p,*PnfE3?gU$jiFUEX`H?)@Kj;P9n@8T8c=.LX=)V*hnbESM\G_IlFIXartSAu61UN#Yfn+t4)7
jJ-_?+pI^>ZZd5nC+H^nE>7fr4::&#).(nh'[Yok-n&G!'`73S+hfV,G=b*_"chltK0E=B9^F)Zd*uHQ
nd9ZbhI_":Tl+d)]GcJqS"(dJosu1V8<u4O^IDACeu2V8N=+PrRN9&sd$Mk'_,e_[mgeg_64%7-W7M\>
`<s@eFA;AI*r_;(L9EE0"kC5aQgNW,hJJbF;.-!64:pV2("4:@3jNs.B3=H,)tfAO*<sS83rUBueSWO>
,Xlh?e&"sY8\nGP:1-"Y@G,>P+uRj#fQeQiUD<^VnG3WbJdNkE5IIK%qDpUM@cX3-(Y#o\m"r>/pi75C
cQW&b&Mgm:(hH.^(K>,oQ<9gjZY'1U>td4kXBb-R":FQ(M@&r&"?*0lki?PDaFAn7*L%s49F@Iii?TXI
7B$Un15_<W90p685RA`jSTU&;8=&`mSW?EpPX-sQ$eY%_onpPknuhZP-m+e-'3&K,?-TP5s+DRg+Y!><
s5N%4cf_VpVVbM3b'ph$fDVeo<S67[BQN%^3596KA?!R)R`<bpltOViRruWXQ+$<GCIXljY1!5MD,hO0
lp5X'h$/Kt.[<2Fq!`ejhqm4]St<CDCg*rAWDlnt<.L^=Unk6!Yb84rn;Y-.Yjg;LOJe^tW:T.nb^TT3
o:9JSldaK*[Hi#-A87ka\UHZGDX9j[B`-&938%-PF5,eKb6=m@gs^i'q3lu+l,h&h8akclX]meG3=:JW
Cc63K7K&d*:n19n91t1*-o.3lWiE)3]UYfH.[:^UgP_%aKg!/`;b6c!b%h)M&mr?Z8p5Bdd:h;k$gd>$
3&DP5S.LjX\>6K*k9tbj'KsEl@aj5@<!c,TKbTB#M:\q<ccjULCMV\W&:DS6<r]G00st1:(C3P$<*Cp=
S<3C=USmmmaRi&)kHE<VInct<9M,nnLlICRM2B'POg%+NnaUTrrCI?1H%iV@;ED#p4iJ4u9u"s<!Wou)
&0]#X.p"?/\qH!DXf^pT,$uN<n:l[PR[T[3l-E3hQbB?]G#f$S7S.Sp3r!ElnWRn'J!6kp.'W]6<l]qq
.#NpKM2R:E[]?GNrZqihVkKe-]`'!$%*g?gH8H=;TA,AA&,b\+nb:^"6429g!!uG@+XlmNnLBe2/jQP!
7"87;RldWel[,LbY8K@rbkbJY^n5]*r\655eu=o3815VDc_#tk&7^i$a?%OlUI_=&4'O`9H&;4#a6$1h
qKJ_pROX/a!rW9DfnD)dem2.KX.;26NjI(!s-=(C?=NeEO_'"k@cC2',of_(]Q?CQkq1B9lWn.6'44b"
I4638f>1:J[Jd2SrM)jFO8#"#qtA^M<mS1"pI2XYgrmgCWt1MJN@<Sj2[Xh;[X.#%HMEkBpfP)@,/;n,
TNRE7p>6iabe7(ZDq3\H`MHITC0fQ<g=0[/c#6paYS9Y^@oF+T;JOORaA7;*Y7q[j'pg5[5A/TUM@522
TeNC52LfGrr.SSFVbaZY;W%8T>;EV1&(jm\ru3@=Q`7JFWnAI8/MM^LW9`'j`D]S#Jg00m.IKetj$+$5
69;V_U6QL<-K]*Ij`eXT23`Y9US4?^k7;-Y,Gg,>%l@XGid=UMNU8+K3gS4rMN!;Mq:a^0<lZTfH2%XZ
-h=Q\aA0&,oTPNQ;<[]La=59d"s<SX4tpj1lWq9[]pbd)\YEBCh7a#LABfKgMt_Ph9Pf@EWo?kHimFMk
.k<,Y"t,k68c,H)lOYHgms6s\GW[$j#kWGV3(I?jZs'Rk3F\fQmHs<+l=ph:c53LRe1-[dLA?J!3-)&[
j4iq46-7Br/LW#t[>Tp"E"]7RXAfBmVpfd4GE7cEMN3CQaRTPq>hZW2\%8Iq?;IZSfiBX#Hqt.Y\Xdec
1c&jJ1J,h7.?7'&-R=>b9$Cq?R4jkqY>l#Y]sQQrNBG`O'lQ6]qne#10E3j,5LD)G>Q~>
Q
q
[ 68.0000 0.00000 0.00000 46.0000 516.251 452.215 ] concat
<<
/ImageType 1
/Width 68  /Height 46
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [68 0 0 46 0 0]
/DataSource currentfile /ASCII85Decode filter /DCTDecode filter 
>> image
s4IA0!"_al8O`[\!WW3$!!*'"s4[N@!!ic5#6k>;#6tJ?#m^kH'FbHY$Odmc'+Yct)BU"@)B9_>,VCGe
+tOrY*%3`p/2/e81c-:%3B]>W4>&EH1B6)/6NIK"#n.1M(_$ok1*IV\1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,AmF!"fJ:/c\9A!?qLF&HMtG!WU(<*rl9A"T\W)!<E3$
z!!!!"!WrQ/"pYD?$4HmP!4<@<!W`B*!X&T/"U"r.!!.KK!WrE*&Hrdj0gQ!W;.0\RE>10ZOeE%*6F"?
A;UOtZ1LbBV#mqFa(`=5<-7:2j.Ps"@2`NfY6UX@47n?3D;cHat='/U/@q9._B4u!oF*)PJGBeCZK7nr
5LPUeEP*;,qQC!u,R\HRQV5C/hWN*81['d?O\@K2f_o0O6a2lBFdaQ^rf%8R-g>V&OjQ5OekiqC&o(2M
Hp@n@XqZ"J6*ru?D!<E3%!<E3%!<<*"!!!!"!WrQ/"pYD?$4HmP!4<C=!W`?*"9Sc3"U"r.!<RHF!<N?
8"9fr'"qj4!#@VTc+u4]T'LIqUZ,$_k1K*]W@WKj'(*k`q-1Mcg)&ahL-n-W'2E*TU3^Z;(7Rp!@8lJ\
h<``C+>%;)SAnPdkC3+K>G'A1VH@gd&KnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZEppG[^WcW]#)A'`Q#s
>ai`&\eCE.%f\,!<j5f=akNM0qo(2MHp@n@XqZ#7L$j-M1!YGMH!'^JXqVcfs9DF(gRC91gJ[gYO2;M=
;ic`@uV#LFt8c<FP3_lDC_[tP!g+#LKlMgkYfrJfq:"1ot!.c6^W\MUr;HiO.O(6L7QZBuI>-d`25DcD
Gl1Sch=>/u<q;1cXbF2%nHOl]Rb#7KTI,Y;O9\4RKQ=fX;Slpsn,]ZXSE0K'&A*./^X1@`1c\=:Jrr>_
]F5ipW<_#mt9t,:]d7"egG(k4^N,Fdh&kF"6@SBjuf9l@!::n(,'2&HseAe7.T%25BEE,r$Z7s4r3_`%
XB-sGkqa^.T7])`AX!Ml$7"<Cde:UNG#Q22*q,aQ_."=!7Y@h5<9d?Y-_Z"/JbC:at]n,QN^;6atc`Eb
(2!OjfrrABg5:RCO/+"I$X$<o08N(Y7HH1_hjAsaEl\M_jD(ee*q/qk6Hc(rY^P=?aO9"SP"D9]s4EX1
h8!Vlr^seen\Wr.H.&+BGcnk?#6s*[k\2-)"*hN&c3h=!uW8C0c@@:)ePsg7Uq=Udi^,(r?mR^rKnkVM
q"41%XicRCnF84)c,Gj^9W_>YEW;ci9JnR"lEWjfIAF]gt#(Kh*rr@_?5NdrRPtLXFZbDYq1c#mLBYsg
)5SZ)"J*#kn!%%sGeZ\?<BD]%8!8l-%]iXe^htc4qrUqaAHqK9iI&Aq@aWc6aIqS(3h4O]GJ+`-;n:%i
p@\VUUNJ(F:HOtZKnZGsm&nM"BSh9e9rr<?\J'So/-j/3i$ipJBGm$uN?)INeT$ktP/VK"ZjXtf\dY\&
)f`~>
Q
q
[ 70.0000 0.00000 0.00000 20.0000 465.421 527.785 ] concat
<<
/ImageType 1
/Width 70  /Height 20
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [70 0 0 20 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb!<N>>n^,'ZWF*?i&>ldm!CI?Qa25S[L1G>#!Ld1f:#;,\g/?b5p\,i8K-?_rV.J#X[Sr#SIS99t`rS
,pJ3PF=@ZO5TA07`;\paBBF"gB@cP<[Ei0[=SrH$e*5-%bucO*\@CbmGhd2Gc"8aK$p'qS-Bh.t9F(b&
5+g0_E^rVi8L2a2d*U_/i5!.Ddn::0`;]ab!eJ_MfD"@>L51Q).`CB;"IG:pjVWaJI(m;-]oS$?>0:H`
nT`i,[qiBTPtD4rUF7T)M1e2="MeWUR7nrZ+ETZ88u4jRA28F@AE91I]f#)cWp]:mGjNYubfRuKVmDnb
SjoJPZe;FleE8#*$3#kC35",J`c?HS*"Ia4h/sJ/]L3b\*GoY1NupTp>-5>?meSK=\;<VjA2<CaF;'I6
>?b<8=un`,@1,F0I;iJ"f@OTEBgbZi:&",6Df9QLmntX#Wb"1O3f6<LHG0<M=DfGtW3NT>7N`3tR7rG`
T?kE(q&mjT-7T=NJmDa#\IQg--NZ.^1q6enWa2Ar-tJ]D2&fT@/_.<lWcUZDZOs`h;<A;1S0@,j8E'nI
lp9,BR$nM@EU\PsIkJ&&-a!A>MgrV'(Ku2Qo/p-*c1<YC&+a`LF'QDBX*&A<QWDk]<RY?A$>1i.V?09K
3*g-kafJHuKd&74:7945Cj=Af,g[.DV>X)%*s:nV`b9+)XsAUC>I=g\R0E1o&a\C*cG-o!s-k4@;(*B$
]t;hgm1t\b$=LcP]RDFs^K^3o']sT0(Z)m1HTU]L5$,J>.MAZMjV.A13To_`b\#/*H"PqnRpOG#YHj2]
/9g'7m6>.W%M8*C246258/i1Uh=?[dr_=,"WKpGn=K5#\I&LB=(u\L.6&&>d<cG`?7,`u@>nr;t&fCa(
Dq/ODlE)>kCMgJ#Yip7u#]ON+0W*?b6rJ6AFq3Ers-nh&Q#JR:YH2ZVYjQsC9b_pPs!$affh+Y<KKEJX
mgqeN%4@m[pJ=p3,.>U;GA?q$@I1HXm0BrbdtkqCYBI%@HC7j9?C7Xi6_k$,NJC:H_$gr92Q`P#:8!Nq
Xk7NtET_n%lZ^Th2SN-PLT:#r9+?;D%brC%rgcS8T2[(oZBt6@KS]bt^Kf^9$OU5],,*]-LuoS;4;'ZP
0:oN#FbjSE/Wr=S1k.XO9l!e9T1JU&Il1*&].&YR$aQO?m!-p@4>s@>q*l/jK>Z6LP(o+h=J9PY,A1+M
X$U#12%Gq^Qf6N,G$7Ij,r<-NOiS+=1pAI8Vhq<FCY:J*0mTXP*m,^_/>X**0m_3n^*<-VOpG>UjN_\)
4'p:1(eol2Q3c<W_=m9sd5U-?++#u46o5gal@`0,X?>YQe$[J?D3U"'?C3IV`EGee"0(geo.h"qWS1%]
W?@oek%N]n21.k"SPb!lZ!`m1E'!ppUeLF1F$t,b,IlSnEW4YY3:*)_qoH5'B%\[J25o(FV9AV[fKJ3b
]0,PcS@N!/m[kB'5>Z!1O4it5d<eT)<@9>^jj9)UhbdAZBm"_2L4e"nXti*"(72sQ7h,6Hd`>@S3(aQ_
J[&`4VSn"XHFd3OQ^DGA$WVLm)NLND-u'raN?]VLQmC+D-85:568p1>%LP&N!KMPX.=-jWLibpIR)ULM
q#m.ZQR;'m#f+-KllHef9g[bTm<jYq%jJ+YE_C%Pe"bd>[dFApc*^O_j;V&aQ1ZU`;c%r3n*`Ug]Q'p9
PniL6TRdPX.M)m0cH\HjNp5eBMoDDi.SCM===g&6S1JgE:_\=W'a3Q,=%/fZ"RcN?<506V%oAD*ea)lp
[gqpnGS&rP_*PV*"oSVDDka*~>
Q
q
[ 36.0000 0.00000 0.00000 57.0000 332.452 471.884 ] concat
<<
/ImageType 1
/Width 36  /Height 57
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [36 0 0 57 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/gf2#mH'ZU0Gr"G4`O?@?t!htJl\jZ!Mf^o/p%Fl<"#nWELRo*igZiri(L'RX2O<n4b7.:j\8E?Zd
ft+JK\MhWGUYS]]3o%8e^,bAGF(XdZ7h9ihGdtAtZeOm!f@O)*=-o8?(DdnNkN<V=jm_d/K*+1s458NE
#6tK(7n73)B3)(`B!^=Kgt^fEHh.%.?=7;Sj:?g0R2P.YS=E[a0TM3TH*Y&o]=GJ_]"0pe5<h%ap87te
USE'AmdT`8i8EP/^d)76?WU<1CMR]Y9?XL?c-=KqGpa^Vnc[Cido2/,rc.W*pZqMKZEge&lthY.;le0i
B[c8d$=94fnDq32rr%Sthl#?q`<?Fnm-jD<aMu5Sfk`R79G8'Q]O5[YT15SqBP9q7!2G(-X'><sY9?s(
+4FjnEoH<Jl!]:\/&5EF,(X'nZa5ki>9.*\ZTqGf;e'=t0*69=FnPG#`Pof8AS#FaAnGXcA<`CG\o?nU
3o%0Q\$rcQnJi_S+ZV(pS"]9<DMEU=i10sF-h+u$\L'N<\8_;^]]K$irAX.LUdCpakJ[$[Y4q(f;gWHX
N,?:OkAnuKKj<JUpm(/p`'kOr/M6pt!$t=BR%9e=R[ShsZIQR<WalQ\4K>T[UOr_HHI$V[oH*+JMjJ(K
^l/BEe'h,iHG.#*"@>_;K'>u2cL+P9?LF?l-`k']J,lFTQ'IX)nSnt:PG:fS=BJs'D/HC;4u=/e2@9:a
JBh(r=nsTbH=[H!734-r\bO4<b;i(L[&Bo/"!SX+7S-/X1!3?=qqS^6#tk>=c-=L!`3DWI0btQA3G%9n
_A8sNE%^a@9R%\PZL.6O%@;:P\7VtoGRj1D^!u77nPW1uoO9k1I+<"\I@WuPf8E*$Mc)3_Lt#]`]$hIu
(]BXfEDMdEi>diilbuF@rQ*/67-aHF(\"WBM?U^B]pS6)"U-7u\aiNL=@f)T]ms.aFaeC_$i_2f;D1dg
V-Y.X9"f2He>p0l>3_BFT?eE<EY1CDU4-H2LQ\]/J,heC=(,NG5sYMaa=GM.oO;5GcZ1`JBc&&oE64ZG
VB7!:BgFDBjQ>TNdE@4o0JG1;1mI376=)*rE,d03%M"5RF@AVeV5:$ab(Y>1>l+Sm=o@Bq6'tk\>>RG_
(Uh!QFpY+k+`YK?`Sm+AH!t`6P'\_piDO%NH;VY,H$S]8P'Y4i8d!C5`*ae%dF$@`aiU@TUZ`F+'Cup)
F!]VHGqC3aJp'EtVP^6M6#rs^LLc6j-rjJX?A@0M2A6RZHq1ul?uK!:%1NcBNeRWV#%^\4<J=^W;o9.t
#SA.#T9,.rR$^G)H<)[:$[Ub4(>.lAa94.HB,$ctJ[)Jb.4H\\'bt.c@6m1F7%0@)KHG#n&.fBQUT\tm
Eu5c4M#e2;_B>[C-V%0WZ-N^r5Q5YVKS5#6LL[:A68.&cMd@r"V-]rsg?N`MO+N;Gjj]48(ffk?`:W\D
Vd;>Q0A1D1:VE.m'#!M'"K7'5Rj!WOH:aT1S9MXp#8U5a5YCS2P?p#";D0HFMlXfqogPED]mS)`VppV/
0&):+>dA:pS3?/f/&:t`'>VBil;2'kl%K.b:/2:Kq0l9d5aZqmp@q#OmHq%#B%u(p1RUo>,(H"h%J%OW
UX@/_T]667E:U<T^BT=!D/IO4[G("kO)Ft"gXBNW~>
Q
.960784 .960784 .960784 RG
newpath
335.000 460.000 m
365.000 460.000 l
365.000 490.000 l
335.000 490.000 l
335.000 460.000 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
335.000 460.000 m
365.000 460.000 l
365.000 490.000 l
335.000 490.000 l
335.000 460.000 l
h
S
2 J
10.0000 M
.960784 .960784 .960784 RG
newpath
460.000 510.000 m
490.000 510.000 l
490.000 540.000 l
460.000 540.000 l
460.000 510.000 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
460.000 510.000 m
490.000 510.000 l
490.000 540.000 l
460.000 540.000 l
460.000 510.000 l
h
S
2 J
10.0000 M
.960784 .960784 .960784 RG
newpath
535.000 435.000 m
565.000 435.000 l
565.000 465.000 l
535.000 465.000 l
535.000 435.000 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
535.000 435.000 m
565.000 435.000 l
565.000 465.000 l
535.000 465.000 l
535.000 435.000 l
h
S
2 J
10.0000 M
.960784 .960784 .960784 RG
newpath
660.000 510.000 m
690.000 510.000 l
690.000 540.000 l
660.000 540.000 l
660.000 510.000 l
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
660.000 510.000 m
690.000 510.000 l
690.000 540.000 l
660.000 540.000 l
660.000 510.000 l
h
S
2 J
10.0000 M
q
1.00000 .600000 .600000 RG
newpath
300.300 359.928 m
721.300 359.928 l
721.300 388.316 l
721.300 390.316 720.300 391.316 718.300 391.316  c
303.300 391.316 l
301.300 391.316 300.300 390.316 300.300 388.316  c
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [300.29998779296875 329.5390625 300.29998779296875 392.8160095214844]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.9019608 0.9019608]
         /C1 [1.0 0.6784314 0.6784314]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
300.300 333.539 m
300.300 331.539 301.300 330.539 303.300 330.539  c
718.300 330.539 l
720.300 330.539 721.300 331.539 721.300 333.539  c
721.300 360.928 l
300.300 360.928 l
h
f
1.00000 .941176 .941176 RG
2.00000 w
newpath
302.300 333.539 m
302.300 332.872 302.633 332.539 303.300 332.539  c
718.300 332.539 l
718.967 332.539 719.300 332.872 719.300 333.539  c
719.300 388.316 l
719.300 388.983 718.967 389.316 718.300 389.316  c
303.300 389.316 l
302.633 389.316 302.300 388.983 302.300 388.316  c
h
S
1.00000 .600000 .600000 RG
1.00000 w
newpath
302.300 333.539 m
302.300 332.872 302.633 332.539 303.300 332.539  c
718.300 332.539 l
718.967 332.539 719.300 332.872 719.300 333.539  c
719.300 388.316 l
719.300 388.983 718.967 389.316 718.300 389.316  c
303.300 389.316 l
302.633 389.316 302.300 388.983 302.300 388.316  c
h
S
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 -1.00000 395.281 367.159 ] concat
0.00000 0.00000 moveto
/Helvetica findfont 18 scalefont setfont 15.0000 cfontH
(\000S\000y\000s\000t\000\350\000m\000e\000 \000d\000'\000a\000d\000m\000i\000n\000i\000s\000t\000r\000a\000t\000i\000o\000n) recshow
Q
2 J
10.0000 M
Q
0 J
1.45000 M
newpath
954.000 435.010 m
954.000 415.009 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
954.000 485.010 m
954.000 465.009 l
S
2 J
10.0000 M
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
688.161 510.009 m
810.001 346.835 l
S
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
690.026 539.208 m
811.570 539.208 l
S
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
550.000 427.000 m
550.000 399.343 l
S
newpath
550.000 435.000 m
555.000 423.000 l
550.000 426.000 l
545.000 423.000 l
h
f
newpath
550.000 391.343 m
545.000 403.343 l
550.000 400.343 l
555.000 403.343 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
675.000 502.000 m
675.000 399.350 l
S
newpath
675.000 510.000 m
680.000 498.000 l
675.000 501.000 l
670.000 498.000 l
h
f
newpath
675.000 391.350 m
670.000 403.350 l
675.000 400.350 l
680.000 403.350 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
475.088 502.000 m
475.479 399.296 l
S
newpath
475.057 510.000 m
480.103 498.019 l
475.092 501.000 l
470.103 497.981 l
h
f
newpath
475.510 391.296 m
470.464 403.277 l
475.476 400.296 l
480.464 403.315 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
350.000 452.000 m
350.000 399.341 l
S
newpath
350.000 460.000 m
355.000 448.000 l
350.000 451.000 l
345.000 448.000 l
h
f
newpath
350.000 391.341 m
345.000 403.341 l
350.000 400.341 l
355.000 403.341 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
